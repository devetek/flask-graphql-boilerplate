version: "3.3"

services:
  butterfly_mysql:
    image: mysql:latest
    container_name: butterfly_mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    volumes:
      - butterfly_mysql_backup:/docker-entrypoint-initdb.d
      - butterfly_mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

  butterfly_redis:
    image: redis:alpine
    container_name: butterfly_redis
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    volumes:
      - ./docker/redis:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_PASSWORD=redis_password

  butterfly_backend:
    depends_on:
      - butterfly_mysql
      - butterfly_redis
    image: prakasa1904/tps-py-api:development
    container_name: butterfly_backend
    working_dir: /devetek/
    volumes:
      - .:/devetek
      - ./process/dev/dev-mysql:/devetek/mysql
      - /devetek/python_modules/ # Generate volume `python_modules` empty
    restart: always
    command: ["./mysql", "butterfly_mysql", "make", "dev-up"]
    env_file:
      - ./docker/.devenv
    ports:
      - 5000:5000

  butterfly_frontend:
    image: node:lts-alpine
    container_name: butterfly_frontend
    working_dir: /devetek
    volumes:
      - ./web/modules/frontend:/devetek
    restart: always
    command: yarn start

  butterfly_nginx:
    image: nginx
    container_name: butterfly_nginx
    depends_on:
      - butterfly_backend
      - butterfly_frontend
    volumes:
      - ./public/:/devetek
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    ports:
      - 80:80
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

volumes:
  butterfly_mysql_backup:
    driver: local
    driver_opts:
      type: none
      device: $PWD/docker/mysqldb/restore
      o: bind
  butterfly_mysql_data:
    driver: local
    driver_opts:
      type: none
      device: $PWD/docker/mysqldb/volume
      o: bind
